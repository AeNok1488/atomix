syntax = "proto3";

package atomix.primitive.service;

option java_package = "io.atomix.primitive.service";
option java_outer_classname = "ServiceProto";
option java_multiple_files = true;

// Service snapshot
message ServiceSnapshot {
    int64 id = 1;
    string type = 2;
    string name = 3;
    int64 index = 4;
    int64 timestamp = 5;
    int64 delta = 6;
    repeated ServiceSession sessions = 7;
    bytes snapshot = 8;
}

// Service session
message ServiceSession {
    int64 session_id = 1;
    string member_id = 2;
    int64 timeout = 3;
    int64 timestamp = 4;
    int64 request_sequence = 5;
    int64 command_sequence = 6;
    int64 event_index = 7;
    int64 last_completed = 8;
    int64 last_applied = 9;
}

message EventRequest {
    string server_id = 1;
    int64 session_id = 2;
    int64 event_index = 3;
    int64 previous_index = 4;
    repeated PrimitiveEvent events = 5;
}

message PrimitiveEvent {
    string type = 1;
    bytes value = 2;
}

message PrimitiveRequest {
    oneof type {
        OpenSessionRequest open_session = 1;
        KeepAliveRequest keep_alive = 2;
        CloseSessionRequest close_session = 3;
        OperationRequest operation = 4;
    }
}

message PrimitiveResponse {
    oneof type {
        OpenSessionResponse open_session = 1;
        KeepAliveResponse keep_alive = 2;
        CloseSessionResponse close_session = 3;
        OperationResponse operation = 4;
    }
}

message OpenSessionRequest {
    string member_id = 1;
    string primitive_name = 2;
    string primitive_type = 3;
    int64 timeout = 4;
}

message OpenSessionResponse {
    int64 session_id = 3;
    int64 timeout = 4;
}

message KeepAliveRequest {
    int64 session_id = 1;
    int64 command_sequence = 2;
    int64 event_index = 3;
}

message KeepAliveResponse {
}

message CloseSessionRequest {
    int64 session_id = 1;
    bool delete = 2;
}

message CloseSessionResponse {

}

message OperationRequest {
    int64 session_id = 1;
    int64 sequence_number = 2;
    oneof operation {
        CommandRequest command = 3;
        QueryRequest query = 4;
    }
}

message OperationResponse {
    int64 index = 1;
    int64 event_index = 2;
    bytes output = 3;
}

message CommandRequest {
    string name = 1;
    bytes command = 2;
}

message QueryRequest {
    int64 index = 1;
    string name = 2;
    bytes query = 3;
}

message ResetRequest {
    int64 session_id = 1;
    int64 event_index = 2;
}