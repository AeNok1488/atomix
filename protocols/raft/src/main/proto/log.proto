syntax = "proto3";

package atomix.raft.storage;

option java_package = "io.atomix.protocols.raft.storage.log";
option java_outer_classname = "RaftLogProto";
option java_multiple_files = true;

// Raft log entry
message RaftLogEntry {
    int64 term = 1;
    int64 timestamp = 2;

    oneof entry {
        InitializeEntry initialize = 3;
        ConfigurationEntry configuration = 4;
        MetadataEntry metadata = 5;
        OpenSessionEntry open_session = 6;
        KeepAliveEntry keep_alive = 7;
        CloseSessionEntry close_session = 8;
        CommandEntry command = 9;
        QueryEntry query = 10;
    }
}

message InitializeEntry {
}

message ConfigurationEntry {
    repeated RaftMember members = 1;
}

message MetadataEntry {
    int64 session_id = 1;
}

message OpenSessionEntry {
    string member_id = 1;
    string service_name = 2;
    string service_type = 3;
    ReadConsistency read_consistency = 4;
    int64 timeout = 5;

    enum ReadConsistency {
        SEQUENTIAL = 0;
        LINEARIZABLE_LEASE = 1;
        LINEARIZABLE = 2;
    }
}

message KeepAliveEntry {
    repeated int64 session_ids = 1;
    repeated int64 command_sequences = 2;
    repeated int64 event_indexes = 3;
}

message CloseSessionEntry {
    int64 session_id = 1;
    bool expired = 2;
    bool deleted = 3;
}

message CommandEntry {
    int64 session_id = 1;
    int64 sequence_number = 2;
    string operation = 3;
    bytes value = 4;
}

message QueryEntry {
    int64 session_id = 1;
    int64 sequence_number = 2;
    string operation = 3;
    bytes value = 4;
}

message RaftMember {
    string member_id = 1;
    Type type = 2;
    int64 updated = 3;

    enum Type {
        INACTIVE = 0;
        PASSIVE = 1;
        PROMOTABLE = 2;
        ACTIVE = 3;
    }
}
