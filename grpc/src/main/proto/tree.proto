syntax = "proto3";

import "protocol.proto";

package atomix.tree;

option java_package = "io.atomix.grpc.tree";
option java_multiple_files = true;

// Tree ID
message TreeId {
    string name = 1;
    oneof proto {
        protocol.MultiRaftProtocol raft = 2;
        protocol.MultiPrimaryProtocol multi_primary = 3;
        protocol.DistributedLogProtocol log = 4;
    }
}

message TreeNode {
    bytes value = 1;
    uint64 version = 2;
}

message GetChildrenRequest {
    TreeId id = 1;
    string path = 2;
}

message GetChildrenResponse {
    map<string, TreeNode> children = 1;
}

message GetRequest {
    TreeId id = 1;
    string path = 2;
}

message GetResponse {
    TreeNode node = 1;
}

message SetRequest {
    TreeId id = 1;
    string path = 2;
    bytes value = 3;
    uint64 version = 4;
}

message SetResponse {
    bool succeeded = 1;
}

message RemoveRequest {
    TreeId id = 1;
    string path = 2;
}

message RemoveResponse {
}

// Tree event
message TreeEvent {
    TreeId id = 1;
    Type type = 2;
    bytes value = 3;
    uint64 version = 4;

    // Tree event type
    enum Type {
        CREATED = 0;
        UPDATED = 1;
        DELETED = 2;
    }
}

// Tree service
service TreeService {

    rpc GetChildren(GetChildrenRequest) returns (GetChildrenResponse) {}

    rpc Get(GetRequest) returns (GetResponse) {}

    rpc Set(SetRequest) returns (SetResponse) {}

    rpc Remove(RemoveRequest) returns (RemoveResponse) {}

    rpc Listen(stream TreeId) returns (stream TreeEvent) {}

}