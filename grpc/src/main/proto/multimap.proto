syntax = "proto3";

import "protocol.proto";

package atomix.multimap;

option java_package = "io.atomix.grpc.multimap";
option java_multiple_files = true;

// Basic multimap request
message MultimapId {
    string name = 1;
    oneof proto {
        protocol.MultiRaftProtocol raft = 2;
        protocol.MultiPrimaryProtocol multi_primary = 3;
        protocol.DistributedLogProtocol log = 4;
    }
}

message SizeRequest {
    MultimapId id = 1;
}

message SizeResponse {
    uint32 size = 1;
}

message PutRequest {
    MultimapId id = 1;
    string key = 2;
    bytes value = 3;
}

message PutResponse {
    bool succeeded = 1;
}

message GetRequest {
    MultimapId id = 1;
    string key = 2;
}

message GetResponse {
    repeated bytes values = 1;
    uint64 version = 2;
}

message RemoveRequest {
    MultimapId id = 1;
    string key = 2;
    repeated bytes values = 3;
}

message RemoveResponse {
    bool succeeded = 1;
}

message ClearRequest {
    MultimapId id = 1;
}

message ClearResponse {
}

// Multimap event
message MultimapEvent {
    MultimapId id = 1;
    Type type = 2;
    string key = 3;
    bytes value = 4;

    enum Type {
        INSERT = 0;
        REMOVE = 2;
    }
}

// Multimap service
service MultimapService {

    rpc Size(SizeRequest) returns (SizeResponse) {}

    rpc Put(PutRequest) returns (PutResponse) {}

    rpc Get(GetRequest) returns (GetResponse) {}

    rpc Remove(RemoveRequest) returns (RemoveResponse) {}

    rpc Clear(ClearRequest) returns (ClearResponse) {}

    rpc Listen(stream MultimapId) returns (stream MultimapEvent) {}

}
